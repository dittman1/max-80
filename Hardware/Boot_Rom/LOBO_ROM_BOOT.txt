ROM:0000             ;
ROM:0000             ; +-------------------------------------------------------------------------+
ROM:0000             ; |   This file has been generated by The Interactive Disassembler (IDA)    |
ROM:0000             ; |           Copyright (c) 2017 Hex-Rays, <support@hex-rays.com>           |
ROM:0000             ; +-------------------------------------------------------------------------+
ROM:0000             ;
ROM:0000             ; Input SHA256 : 174DBCFF9F05DD64DB09687A17732E6EFD3134E5293914D66BD7D44108156531
ROM:0000             ; Input MD5    : 59C6913B0FCE577FD7D385B9FD48A29D
ROM:0000             ; Input CRC32  : D193743C
ROM:0000
ROM:0000             ; ---------------------------------------------------------------------------
ROM:0000             ; File Name   : D:\Downloads\TechDocs\RetroComputing\Tandy\LOBO - Max80\LOBO_BOOT.BIN
ROM:0000             ; Format      : Binary file
ROM:0000             ; Base Address: 0000h Range: 0000h - 0200h Loaded length: 0200h
ROM:0000
ROM:0000             ; Processor       : z80 []
ROM:0000             ; Target assembler: Zilog Macro Assembler
ROM:0000
ROM:0000             ; ===========================================================================
ROM:0000
ROM:0000             ; Segment type: Pure code
ROM:0000                             segment ROM
ROM:0000
ROM:0000             ROM:                                    ; CODE XREF: ROM:0445↓j
ROM:0000 F3                          di
ROM:0001 18 1B                       jr      BOOT
ROM:0003
ROM:0003             ; =============== S U B R O U T I N E =======================================
ROM:0003
ROM:0003
ROM:0003             READ:                                   ; CODE XREF: READ+6↓j
ROM:0003                                                     ; READ+F↓j ...
ROM:0003 CD CD 00                    call    TRY
ROM:0006 DC EE 01                    call    c, SQUAWK
ROM:0009 38 F8                       jr      c, READ
ROM:000B F5                          push    af
ROM:000C 78                          ld      a, b
ROM:000D B9                          cp      c
ROM:000E 28 04                       jr      z, RDDUN        ; DONE READING SECTORS, NO ERRORS, NC
ROM:0010 F1                          pop     af
ROM:0011 04                          inc     b
ROM:0012 18 EF                       jr      READ
ROM:0014             ; ---------------------------------------------------------------------------
ROM:0014
ROM:0014             RDDUN:                                  ; CODE XREF: READ+B↑j
ROM:0014 F1                          pop     af
ROM:0015 C9                          ret
ROM:0015             ; End of function READ
ROM:0015
ROM:0016             ; ---------------------------------------------------------------------------
ROM:0016 00                          nop
ROM:0017 00                          nop
ROM:0018
ROM:0018             ; =============== S U B R O U T I N E =======================================
ROM:0018
ROM:0018             ; INPUT FROM USTAT PORT
ROM:0018
ROM:0018             RST18:                                  ; CODE XREF: TRY:SETUP↓p
ROM:0018                                                     ; TRY:UVCSET↓p ...
ROM:0018 3A F4 07                    ld      a, (USTAT_UCTRL)
ROM:001B CB 57                       bit     2, a            ; TEST BUSY BIT
ROM:001D C9                          ret
ROM:001D             ; End of function RST18
ROM:001D
ROM:001E             ; ---------------------------------------------------------------------------
ROM:001E
ROM:001E             BOOT:                                   ; CODE XREF: ROM:0001↑j
ROM:001E 31 FF 06                    ld      sp, STACK
ROM:0021 FD 21 D8 07                 ld      iy, MLATCH      ; SET IY FOR BOOT AND READ OPERATIONS
ROM:0025 3E AA                       ld      a, 170          ; INITIALIZE DELAY LOOP
ROM:0027
ROM:0027             BOOT1:                                  ; CODE XREF: ROM:0046↓j
ROM:0027 E5                          push    hl
ROM:0028 E1                          pop     hl              ; EXERCISE RAM
ROM:0029
ROM:0029             BOOT1A:                                 ; CODE XREF: ROM:BOOT1A↓j
ROM:0029 10 FE                       djnz    $
ROM:002B FE 96                       cp      96h             ; RESET-BUTTON-RELEASE TIMER
ROM:002D 20 03                       jr      nz, NOBP
ROM:002F 32 F8 07                    ld      (BEEP), a       ; FIRST BEEP
ROM:0032
ROM:0032             NOBP:                                   ; CODE XREF: ROM:002D↑j
ROM:0032 21 FF 07                    ld      hl, PIOCB
ROM:0035 70                          ld      (hl), b         ; NULL CONTROL BYTE
ROM:0036 36 CF                       ld      (hl), 0CFh      ; SET CHANNEL TO MODE 3
ROM:0038 36 80                       ld      (hl), 80h       ; SET OUTPUT/INPUT BITS
ROM:003A 2B                          dec     hl              ; DATA PORT B
ROM:003B 70                          ld      (hl), b         ; CLEAR ALL CLOCK/CALENDAR BITS
ROM:003C 2B                          dec     hl              ; CONTROL PORT A
ROM:003D 70                          ld      (hl), b         ; NULL CONTROL BYTE
ROM:003E 36 CF                       ld      (hl), 0CFh      ; SET CHANNEL TO MODE 3
ROM:0040 36 0F                       ld      (hl), 0Fh       ; SET OUTPUT/INPUT BITS
ROM:0042 2B                          dec     hl              ; DATA PORT A
ROM:0043 36 80                       ld      (hl), 80h       ; SELECT RAM 32K CHUNKS A1 & B1
ROM:0045 3D                          dec     a
ROM:0046 20 DF                       jr      nz, BOOT1       ; REPEAT LOOP INITIALIZATION
ROM:0048 11 FF FF                    ld      de, 0FFFFh
ROM:004B 1A                          ld      a, (de)
ROM:004C 47                          ld      b, a
ROM:004D AF                          xor     a
ROM:004E 12                          ld      (de), a         ; ZERO INTO BANK B
ROM:004F 1A                          ld      a, (de)
ROM:0050 A7                          and     a               ; ZERO IF RAM EXISTS
ROM:0051 78                          ld      a, b
ROM:0052 12                          ld      (de), a         ; RESTORE BYTE
ROM:0053 36 40                       ld      (hl), 40h ; '@' ; SELECT RAM 32K CHUNKS A1 & A2
ROM:0055 20 03                       jr      nz, GETDIP      ; NO RAM
ROM:0057
ROM:0057             DETERMINE BOOT DRIVE TYPE
ROM:0057
ROM:0057             GETAGN:                                 ; CODE XREF: ROM:005F↓j
ROM:0057                                                     ; ROM:00AC↓j
ROM:0057 CD EE 01                    call    SQUAWK
ROM:005A
ROM:005A             GETDIP:                                 ; CODE XREF: ROM:0055↑j
ROM:005A                                                     ; ROM:00CB↓j
ROM:005A 3A F8 07                    ld      a, (BEEP)
ROM:005D E6 07                       and     7
ROM:005F 28 F6                       jr      z, GETAGN       ; NO DRIVE
ROM:0061 FE 07                       cp      7
ROM:0063 28 25                       jr      z, SASI         ; DO SASI BOOT
ROM:0065 D6 03                       sub     3
ROM:0067 38 26                       jr      c, BFLOP        ; DO FLOPPY BOOT
ROM:0069 1E 5C                       ld      e, 5Ch ; '\'
ROM:006B 28 0C                       jr      z, UVC          ; DO 5-INCH HARD BOOT
ROM:006D 3D                          dec     a
ROM:006E 1E 7C                       ld      e, 7Ch ; '|'    ; DO 8-INCH HARD BOOT
ROM:0070 28 07                       jr      z, UVC
ROM:0072 3D                          dec     a
ROM:0073 1E 1D                       ld      e, 1Dh
ROM:0075 28 02                       jr      z, UVC          ; DO 5-INCH BACKUP BOOT
ROM:0077 1E 25                       ld      e, 25h ; '%'    ; DO 8-INCH BACKUP BOOT
ROM:0079
ROM:0079             UVC:                                    ; CODE XREF: ROM:006B↑j
ROM:0079                                                     ; ROM:0070↑j ...
ROM:0079 7B                          ld      a, e
ROM:007A A7                          and     a
ROM:007B
ROM:007B             loc_7B:                                 ; CODE XREF: ROM:008D↓j
ROM:007B 08                          ex      af, af'
ROM:007C AF                          xor     a               ; HEAD 0
ROM:007D 47                          ld      b, a
ROM:007E 4F                          ld      c, a            ; SECTORS 0-0
ROM:007F 57                          ld      d, a
ROM:0080 5F                          ld      e, a            ; CYLINDER 0
ROM:0081 21 00 04                    ld      hl, BSECT       ; Sector load address $0400
ROM:0084 CD 03 00                    call    READ
ROM:0087
ROM:0087             GOBS:                                   ; CODE XREF: ROM:00B8↓j
ROM:0087 C3 00 04                    jp      BSECT
ROM:008A             ; ---------------------------------------------------------------------------
ROM:008A
ROM:008A             SASI:                                   ; CODE XREF: ROM:0063↑j
ROM:008A A7                          and     a
ROM:008B 3E 00                       ld      a, 0
ROM:008D 18 EC                       jr      loc_7B
ROM:008F             ; ---------------------------------------------------------------------------
ROM:008F
ROM:008F             BFLOP:                                  ; CODE XREF: ROM:0067↑j
ROM:008F 1E 41                       ld      e, 41h ; 'A'
ROM:0091 3C                          inc     a               ; SET DOUBLE-DENSITY 5-INCH
ROM:0092 20 02                       jr      nz, EM
ROM:0094 1E 61                       ld      e, 61h ; 'a'
ROM:0096
ROM:0096             EM:                                     ; CODE XREF: ROM:0092↑j
ROM:0096 FD 73 00                    ld      (iy+0), e       ; Select Drive
ROM:0099 AF                          xor     a
ROM:009A 08                          ex      af, af'         ; FLAG FLOPPY
ROM:009B 3E 2F                       ld      a, 2Fh ; '/'    ; STOP FDC
ROM:009D CD 34 01                    call    FSEND
ROM:00A0 3E F4                       ld      a, 0F4h         ; RESTORE HEAD TO TRACK 0
ROM:00A2 CD 2C 01                    call    SENDS
ROM:00A5 3A EC 07                    ld      a, (FCTRL_FSTAT)
ROM:00A8 E6 A4                       and     0A4h            ; READY,HDLD,TR00
ROM:00AA D6 80                       sub     80h
ROM:00AC 20 A9                       jr      nz, GETAGN      ; SOMETHING DIDN'T MATCH
ROM:00AE 57                          ld      d, a            ; SET TRACK NUMBER TO ZERO
ROM:00AF 5F                          ld      e, a
ROM:00B0
ROM:00B0             XTRY:                                   ; CODE XREF: ROM:00C9↓j
ROM:00B0 47                          ld      b, a            ; TRY READING SECTOR 0 ON DISK
ROM:00B1 4F                          ld      c, a
ROM:00B2
ROM:00B2             loc_B2:                                 ; CODE XREF: ROM:00C4↓j
ROM:00B2 21 00 04                    ld      hl, BSECT       ; $400-$6FF are RAM that peeks through from bank 'A'
ROM:00B5 CD CD 00                    call    TRY
ROM:00B8 30 CD                       jr      nc, GOBS
ROM:00BA FD 7E 00                    ld      a, (iy+0)
ROM:00BD EE 40                       xor     40h ; '@'       ; toggle density
ROM:00BF FD 77 00                    ld      (iy+0), a
ROM:00C2 E6 40                       and     40h ; '@'
ROM:00C4 28 EC                       jr      z, loc_B2
ROM:00C6 78                          ld      a, b            ; toggle sector 0 <> 1
ROM:00C7 EE 01                       xor     1
ROM:00C9 20 E5                       jr      nz, XTRY
ROM:00CB 18 8D                       jr      GETDIP          ; TRY AGAIN
ROM:00CD
ROM:00CD             LOW LEVEL DISK READ
ROM:00CD
ROM:00CD             ; =============== S U B R O U T I N E =======================================
ROM:00CD
ROM:00CD
ROM:00CD             TRY:                                    ; CODE XREF: READ↑p
ROM:00CD                                                     ; ROM:00B5↑p
ROM:00CD
ROM:00CD             ; FUNCTION CHUNK AT ROM:0147 SIZE 00000086 BYTES
ROM:00CD
ROM:00CD 08                          ex      af, af'         ; GET CODE,FLAGS
ROM:00CE C2 47 01                    jp      nz, RHARD
ROM:00D1             Floppy Read Routine
ROM:00D1 08                          ex      af, af'         ; GET HEAD NUMBER
ROM:00D2 F5                          push    af
ROM:00D3 FD CB 00 A6                 res     4, (iy+0)       ; RESET SIDE NUMBER
ROM:00D7 0F                          rrca
ROM:00D8 30 04                       jr      nc, RDMOR
ROM:00DA FD CB 00 E6                 set     4, (iy+0)       ; SET SIDE NUMBER
ROM:00DE
ROM:00DE             RDMOR:                                  ; CODE XREF: TRY+B↑j
ROM:00DE 7B                          ld      a, e            ; TRACK NUMBER
ROM:00DF 2F                          cpl
ROM:00E0 32 EF 07                    ld      (FDATA), a
ROM:00E3 3E E4                       ld      a, 0E4h         ; SEEK SLOW
ROM:00E5 CD 2C 01                    call    SENDS           ; REFRESHES MOTORS TOO
ROM:00E8 7B                          ld      a, e
ROM:00E9 2F                          cpl
ROM:00EA 32 ED 07                    ld      (FTRACK), a     ; JUST IN CASE FDC FORGOT
ROM:00ED 78                          ld      a, b
ROM:00EE 2F                          cpl
ROM:00EF 32 EE 07                    ld      (FSECTOR), a    ; SECTOR NUMBER
ROM:00F2 FD 7E 00                    ld      a, (iy+0)
ROM:00F5 E6 10                       and     10h             ; GET SIDE BIT
ROM:00F7 0F                          rrca                    ; INTO BIT 3
ROM:00F8 F6 82                       or      82h             ; READ COMMAND
ROM:00FA 2F                          cpl
ROM:00FB 32 EC 07                    ld      (FCTRL_FSTAT), a
ROM:00FE E5                          push    hl              ; IN CASE OF ERROR
ROM:00FF D5                          push    de
ROM:0100 C5                          push    bc
ROM:0101 EB                          ex      de, hl          ; DE = LOAD ADDRESS
ROM:0102 21 F4 07                    ld      hl, USTAT_UCTRL ; POINT TO DRQ- AND INTRQ-
ROM:0105 01 EF 07                    ld      bc, FDATA       ; POINT TO FDC DATA PORT
ROM:0108 CD 27 01                    call    LREAD
ROM:010B EB                          ex      de, hl          ; HL = NEXT LOAD ADDRESS
ROM:010C C1                          pop     bc
ROM:010D D1                          pop     de
ROM:010E 3A EC 07                    ld      a, (FCTRL_FSTAT) ; CHECK READ STATUS
ROM:0111 2F                          cpl
ROM:0112 E6 9F                       and     9Fh
ROM:0114 28 04                       jr      z, RD_OK        ; GOOD READ
ROM:0116 E1                          pop     hl              ; BAD, RECOVER LOAD ADDRESS
ROM:0117 F1                          pop     af              ; GET HEAD NUMBER
ROM:0118 37                          scf
ROM:0119 C9                          ret                     ; EXIT WITH ERROR
ROM:011A             ; ---------------------------------------------------------------------------
ROM:011A
ROM:011A             RD_OK:                                  ; CODE XREF: TRY+47↑j
ROM:011A F1                          pop     af              ; EAT OLD HL, KEEP NEW HL
ROM:011B F1                          pop     af              ; GET HEAD NUMBER
ROM:011C A7                          and     a               ; CLEAR CY
ROM:011D C9                          ret
ROM:011D             ; End of function TRY
ROM:011D
ROM:011E             ; ---------------------------------------------------------------------------
ROM:011E             ; START OF FUNCTION CHUNK FOR LREAD
ROM:011E
ROM:011E             NOBYTE:                                 ; CODE XREF: LREAD-7↓j
ROM:011E E0                          ret     po              ; RETURN IF INTRQ HAPPENED
ROM:011F
ROM:011F             RLOOP:                                  ; CODE XREF: LREAD+2↓j
ROM:011F A6                          and     (hl)            ; CLEAR BITS IF DRQ OR INTRQ
ROM:0120 FA 1E 01                    jp      m, NOBYTE
ROM:0123 0A                          ld      a, (bc)         ; GET DATA- BYTE
ROM:0124 2F                          cpl                     ; MAKE NORMAL
ROM:0125 12                          ld      (de), a         ; save it
ROM:0126 13                          inc     de              ; NEXT LOAD ADDRESS
ROM:0126             ; END OF FUNCTION CHUNK FOR LREAD
ROM:0127
ROM:0127             ; =============== S U B R O U T I N E =======================================
ROM:0127
ROM:0127
ROM:0127             LREAD:                                  ; CODE XREF: TRY+3B↑p
ROM:0127
ROM:0127             ; FUNCTION CHUNK AT ROM:011E SIZE 00000009 BYTES
ROM:0127
ROM:0127 3E C0                       ld      a, 0C0h
ROM:0129 C3 1F 01                    jp      RLOOP           ; GO CHECK FOR NEXT BYTE
ROM:0129             ; End of function LREAD
ROM:0129
ROM:012C
ROM:012C             ; =============== S U B R O U T I N E =======================================
ROM:012C
ROM:012C
ROM:012C             SENDS:                                  ; CODE XREF: ROM:00A2↑p
ROM:012C                                                     ; TRY+18↑p
ROM:012C FD CB 00 6E                 bit     5, (iy+0)       ; TEST MINI/EIGHT BIT
ROM:0130 28 02                       jr      z, FSEND        ; MUST BE MINI, 30MS
ROM:0132 F6 01                       or      1               ; Make 10MS
ROM:0132             ; End of function SENDS
ROM:0132
ROM:0134
ROM:0134             ; =============== S U B R O U T I N E =======================================
ROM:0134
ROM:0134
ROM:0134             FSEND:                                  ; CODE XREF: ROM:009D↑p
ROM:0134                                                     ; SENDS+4↑j
ROM:0134 32 EC 07                    ld      (FCTRL_FSTAT), a
ROM:0137 3E 14                       ld      a, 20           ; WAIT FOR THINGS TO SETTLE
ROM:0139
ROM:0139             SNDW:                                   ; CODE XREF: FSEND+6↓j
ROM:0139 3D                          dec     a
ROM:013A 20 FD                       jr      nz, SNDW
ROM:013C
ROM:013C             SENDX:                                  ; CODE XREF: FSEND+10↓j
ROM:013C FD CB 00 BE                 res     7, (iy+0)       ; REFRESH MINI MOTORS (READ/WRITE MLATCH)
ROM:0140 3A EC 07                    ld      a, (FCTRL_FSTAT) ; CHECK IF DONE
ROM:0143 0F                          rrca
ROM:0144 30 F6                       jr      nc, SENDX       ; NOT DONE, WAIT
ROM:0146 C9                          ret
ROM:0146             ; End of function FSEND
ROM:0146
ROM:0147             ; ---------------------------------------------------------------------------
ROM:0147             ; START OF FUNCTION CHUNK FOR TRY
ROM:0147
ROM:0147             RHARD:                                  ; CODE XREF: TRY+1↑j
ROM:0147 F5                          push    af
ROM:0148 C5                          push    bc
ROM:0149 4F                          ld      c, a
ROM:014A
ROM:014A             SETUP:                                  ; CODE XREF: TRY+8D↓j
ROM:014A DF                          rst     18h             ; INPUT FROM USTAT PORT
ROM:014B E6 04                       and     4
ROM:014D 28 0D                       jr      z, UVCOFF
ROM:014F 32 F4 07                    ld      (USTAT_UCTRL), a
ROM:0152 3E 0A                       ld      a, 10
ROM:0154
ROM:0154             SETL:                                   ; CODE XREF: TRY+88↓j
ROM:0154 3D                          dec     a
ROM:0155 20 FD                       jr      nz, SETL
ROM:0157 32 F4 07                    ld      (USTAT_UCTRL), a
ROM:015A 18 EE                       jr      SETUP
ROM:015C             ; ---------------------------------------------------------------------------
ROM:015C
ROM:015C             UVCOFF:                                 ; CODE XREF: TRY+80↑j
ROM:015C 3C                          inc     a
ROM:015D 32 F0 07                    ld      (UDATA), a
ROM:0160 3C                          inc     a
ROM:0161 32 F4 07                    ld      (USTAT_UCTRL), a
ROM:0164
ROM:0164             UVCSET:                                 ; CODE XREF: TRY+98↓j
ROM:0164 DF                          rst     18h             ; INPUT FROM USTAT PORT
ROM:0165 28 FD                       jr      z, UVCSET
ROM:0167 AF                          xor     a
ROM:0168 32 F4 07                    ld      (USTAT_UCTRL), a
ROM:016B 79                          ld      a, c
ROM:016C A7                          and     a
ROM:016D 20 01                       jr      nz, UVC1
ROM:016F F5                          push    af
ROM:0170
ROM:0170             UVC1:                                   ; CODE XREF: TRY+A0↑j
ROM:0170 3E 01                       ld      a, 1
ROM:0172 F5                          push    af
ROM:0173 28 0A                       jr      z, SASI1
ROM:0175 D5                          push    de
ROM:0176 7B                          ld      a, e
ROM:0177 F5                          push    af
ROM:0178 C5                          push    bc
ROM:0179 08                          ex      af, af'
ROM:017A F5                          push    af
ROM:017B 08                          ex      af, af'
ROM:017C 79                          ld      a, c
ROM:017D 18 13                       jr      UVC2
ROM:017F             ; ---------------------------------------------------------------------------
ROM:017F
ROM:017F             SASI1:                                  ; CODE XREF: TRY+A6↑j
ROM:017F 7B                          ld      a, e
ROM:0180 80                          add     a, b
ROM:0181 F5                          push    af
ROM:0182 30 09                       jr      nc, NOC1
ROM:0184 7A                          ld      a, d
ROM:0185 3C                          inc     a
ROM:0186 F5                          push    af
ROM:0187 20 05                       jr      nz, NOC2
ROM:0189 79                          ld      a, c
ROM:018A 3C                          inc     a
ROM:018B 18 02                       jr      NOC3
ROM:018D             ; ---------------------------------------------------------------------------
ROM:018D
ROM:018D             NOC1:                                   ; CODE XREF: TRY+B5↑j
ROM:018D D5                          push    de
ROM:018E
ROM:018E             NOC2:                                   ; CODE XREF: TRY+BA↑j
ROM:018E 79                          ld      a, c
ROM:018F
ROM:018F             NOC3:                                   ; CODE XREF: TRY+BE↑j
ROM:018F F5                          push    af
ROM:0190 3E 08                       ld      a, 8
ROM:0192
ROM:0192             UVC2:                                   ; CODE XREF: TRY+B0↑j
ROM:0192 F5                          push    af
ROM:0193 06 06                       ld      b, 6
ROM:0195
ROM:0195             SENDM:                                  ; CODE XREF: TRY+CC↓j
ROM:0195 F1                          pop     af
ROM:0196 CD CD 01                    call    USEND_UGET
ROM:0199 10 FA                       djnz    SENDM
ROM:019B 79                          ld      a, c
ROM:019C A7                          and     a
ROM:019D 28 07                       jr      z, SASI2
ROM:019F CD CD 01                    call    USEND_UGET
ROM:01A2 FE F0                       cp      0F0h
ROM:01A4 38 22                       jr      c, HERR
ROM:01A6
ROM:01A6             SASI2:                                  ; CODE XREF: TRY+D0↑j
ROM:01A6 CD CD 01                    call    USEND_UGET
ROM:01A9 38 1D                       jr      c, HERR
ROM:01AB 77                          ld      (hl), a
ROM:01AC 23                          inc     hl
ROM:01AD
ROM:01AD             loc_1AD:                                ; CODE XREF: TRY+E7↓j
ROM:01AD CD CD 01                    call    USEND_UGET
ROM:01B0 38 04                       jr      c, GTSTAT
ROM:01B2 77                          ld      (hl), a
ROM:01B3 23                          inc     hl
ROM:01B4 18 F7                       jr      loc_1AD
ROM:01B6             ; ---------------------------------------------------------------------------
ROM:01B6
ROM:01B6             GTSTAT:                                 ; CODE XREF: TRY+E3↑j
ROM:01B6 A7                          and     a
ROM:01B7 20 0E                       jr      nz, HERRH
ROM:01B9 79                          ld      a, c
ROM:01BA A7                          and     a
ROM:01BB CC CD 01                    call    z, USEND_UGET
ROM:01BE
ROM:01BE             UNSEL:                                  ; CODE XREF: TRY+F2↓j
ROM:01BE DF                          rst     18h             ; INPUT FROM USTAT PORT
ROM:01BF 20 FD                       jr      nz, UNSEL
ROM:01C1 C1                          pop     bc
ROM:01C2 F1                          pop     af
ROM:01C3 08                          ex      af, af'
ROM:01C4 37                          scf
ROM:01C5 3F                          ccf
ROM:01C6 C9                          ret
ROM:01C7             ; ---------------------------------------------------------------------------
ROM:01C7
ROM:01C7             HERRH:                                  ; CODE XREF: TRY+EA↑j
ROM:01C7 25                          dec     h
ROM:01C8
ROM:01C8             HERR:                                   ; CODE XREF: TRY+D7↑j
ROM:01C8                                                     ; TRY+DC↑j
ROM:01C8 C1                          pop     bc
ROM:01C9 F1                          pop     af
ROM:01CA 08                          ex      af, af'
ROM:01CB 37                          scf
ROM:01CC C9                          ret
ROM:01CC             ; END OF FUNCTION CHUNK FOR TRY
ROM:01CD
ROM:01CD             ; =============== S U B R O U T I N E =======================================
ROM:01CD
ROM:01CD
ROM:01CD             USEND_UGET:                             ; CODE XREF: TRY+C9↑p
ROM:01CD                                                     ; TRY+D2↑p ...
ROM:01CD F5                          push    af
ROM:01CE
ROM:01CE             GS:                                     ; CODE XREF: USEND_UGET+3↓j
ROM:01CE DF                          rst     18h             ; INPUT FROM USTAT PORT
ROM:01CF 0F                          rrca
ROM:01D0 30 FC                       jr      nc, GS
ROM:01D2 F1                          pop     af
ROM:01D3 32 F0 07                    ld      (UDATA), a
ROM:01D6 DF                          rst     18h             ; INPUT FROM USTAT PORT
ROM:01D7 07                          rlca
ROM:01D8 07                          rlca
ROM:01D9 07                          rlca
ROM:01DA 07                          rlca
ROM:01DB 3A F0 07                    ld      a, (UDATA)
ROM:01DE F5                          push    af
ROM:01DF 3E 01                       ld      a, 1
ROM:01E1 32 F4 07                    ld      (USTAT_UCTRL), a
ROM:01E4
ROM:01E4             GS1:                                    ; CODE XREF: USEND_UGET+1A↓j
ROM:01E4 DF                          rst     18h             ; INPUT FROM USTAT PORT
ROM:01E5 E6 01                       and     1
ROM:01E7 20 FB                       jr      nz, GS1
ROM:01E9 32 F4 07                    ld      (USTAT_UCTRL), a
ROM:01EC F1                          pop     af
ROM:01ED C9                          ret
ROM:01ED             ; End of function USEND_UGET
ROM:01ED
ROM:01EE
ROM:01EE             ; =============== S U B R O U T I N E =======================================
ROM:01EE
ROM:01EE
ROM:01EE             SQUAWK:                                 ; CODE XREF: READ+3↑p
ROM:01EE                                                     ; ROM:GETAGN↑p
ROM:01EE F5                          push    af
ROM:01EF 32 F8 07                    ld      (BEEP), a
ROM:01F2 C5                          push    bc
ROM:01F3 06 FF                       ld      b, 0FFh         ; pause after beep
ROM:01F5
ROM:01F5             DLY:                                    ; CODE XREF: SQUAWK+A↓j
ROM:01F5 0B                          dec     bc
ROM:01F6 78                          ld      a, b
ROM:01F7 B1                          or      c
ROM:01F8 20 FB                       jr      nz, DLY
ROM:01FA C1                          pop     bc
ROM:01FB F1                          pop     af
ROM:01FC C9                          ret
ROM:01FC             ; End of function SQUAWK
ROM:01FC
ROM:01FC             ; ---------------------------------------------------------------------------
ROM:01FD 00                          db    0
ROM:01FE 00                          db    0
ROM:01FF 00                          db    0
ROM:0200 ??                          ds 1
............
ROM:03FE ??                          ds 1
ROM:03FF ??                          ds 1
ROM:0400             ; ---------------------------------------------------------------------------
ROM:0400
ROM:0400             BSECT:                                  ; DATA XREF: ROM:0081↑o
ROM:0400                                                     ; ROM:loc_B2↑o
ROM:0400 00                          nop                     ; $400-$6FF are RAM that peeks through from bank 'A'
ROM:0401 1E 28                       ld      e, 40           ; track #
ROM:0403 06 00                       ld      b, 0            ; sector 0    TK40,Sec0,Side0 = start of DIR (bitmap)
ROM:0405 CD 7F 04                    call    read_dip
ROM:0408 F5                          push    af
ROM:0409 21 00 20                    ld      hl, 2000h       ; HL = Load Address $2000
ROM:040C CD B9 04                    call    CALL_READ       ; call into boot rom disk read routine
ROM:040F 26 39                       ld      h, 39h ; '9'    ; Load Address $3900
ROM:0411 06 04                       ld      b, 4            ; $3900-$3BFF = 768bytes of RAM from bank 'A' when 4k page moved into $3XXX
ROM:0413 CD B9 04                    call    CALL_READ       ; call into boot rom disk read routine
ROM:0416 21 CD 20                    ld      hl, 20CDh
ROM:0419 F1                          pop     af
ROM:041A B7                          or      a
ROM:041B 0E 10                       ld      c, 10h
ROM:041D 28 17                       jr      z, loc_436
ROM:041F EA 36 04                    jp      pe, loc_436
ROM:0422 3D                          dec     a
ROM:0423 20 09                       jr      nz, loc_42E
ROM:0425 0E 05                       ld      c, 5
ROM:0427 CB 76                       bit     6, (hl)
ROM:0429 28 0B                       jr      z, loc_436
ROM:042B 0C                          inc     c
ROM:042C 18 08                       jr      loc_436
ROM:042E             ; ---------------------------------------------------------------------------
ROM:042E
ROM:042E             loc_42E:                                ; CODE XREF: ROM:0423↑j
ROM:042E 0E 08                       ld      c, 8
ROM:0430 CB 76                       bit     6, (hl)
ROM:0432 28 02                       jr      z, loc_436
ROM:0434 0E 0A                       ld      c, 0Ah
ROM:0436
ROM:0436             loc_436:                                ; CODE XREF: ROM:041D↑j
ROM:0436                                                     ; ROM:041F↑j ...
ROM:0436 7E                          ld      a, (hl)
ROM:0437 E6 07                       and     7
ROM:0439 3C                          inc     a
ROM:043A CD C8 04                    call    sub_4C8
ROM:043D 32 9C 04                    ld      (loc_49B+1), a  ; self-modifying code!!
ROM:0440 21 00 39                    ld      hl, 3900h
ROM:0443 CB 66                       bit     4, (hl)
ROM:0445 CA 00 00                    jp      z, ROM          ; error. reboot!
ROM:0448 DD 21 15 39                 ld      ix, 3915h
ROM:044C CD D7 04                    call    sub_4D7
ROM:044F 21 FF 43                    ld      hl, 43FFh
ROM:0452 D9                          exx
ROM:0453
ROM:0453             loc_453:                                ; CODE XREF: ROM:046E↓j
ROM:0453                                                     ; ROM:047D↓j
ROM:0453 CD 88 04                    call    loc_488
ROM:0456 3D                          dec     a
ROM:0457 20 17                       jr      nz, loc_470
ROM:0459 CD 88 04                    call    loc_488
ROM:045C 47                          ld      b, a
ROM:045D CD 88 04                    call    loc_488
ROM:0460 6F                          ld      l, a
ROM:0461 05                          dec     b
ROM:0462 CD 88 04                    call    loc_488
ROM:0465 67                          ld      h, a
ROM:0466 05                          dec     b
ROM:0467
ROM:0467             loc_467:                                ; CODE XREF: ROM:046C↓j
ROM:0467 CD 88 04                    call    loc_488
ROM:046A 77                          ld      (hl), a
ROM:046B 23                          inc     hl
ROM:046C 10 F9                       djnz    loc_467
ROM:046E 18 E3                       jr      loc_453
ROM:0470             ; ---------------------------------------------------------------------------
ROM:0470
ROM:0470             loc_470:                                ; CODE XREF: ROM:0457↑j
ROM:0470 FE 1E                       cp      1Eh
ROM:0472 28 31                       jr      z, loc_4A5
ROM:0474 CD 88 04                    call    loc_488
ROM:0477 47                          ld      b, a
ROM:0478
ROM:0478             loc_478:                                ; CODE XREF: ROM:047B↓j
ROM:0478 CD 88 04                    call    loc_488
ROM:047B 10 FB                       djnz    loc_478
ROM:047D 18 D4                       jr      loc_453
ROM:047F
ROM:047F             ; =============== S U B R O U T I N E =======================================
ROM:047F
ROM:047F
ROM:047F             read_dip:                               ; CODE XREF: ROM:0405↑p
ROM:047F                                                     ; sub_4D7+14↓p
ROM:047F 3A F8 07                    ld      a, (BEEP)
ROM:0482 E6 03                       and     3               ; read dipswitch
ROM:0484 C0                          ret     nz              ; 3 == 5" or 8" floppy installed
ROM:0485 CB 23                       sla     e               ; assume Hard Disk connected. Double track number
ROM:0487 C9                          ret
ROM:0487             ; End of function read_dip
ROM:0487
ROM:0488             ; ---------------------------------------------------------------------------
ROM:0488
ROM:0488             loc_488:                                ; CODE XREF: ROM:loc_453↑p
ROM:0488                                                     ; ROM:0459↑p ...
ROM:0488 D9                          exx
ROM:0489 2C                          inc     l
ROM:048A 20 16                       jr      nz, loc_4A2
ROM:048C CD B9 04                    call    CALL_READ       ; call into boot rom disk read routine
ROM:048F 04                          inc     b
ROM:0490 78                          ld      a, b
ROM:0491
ROM:0491             loc_491:                                ; CODE XREF: ROM:0494↓j
ROM:0491 91                          sub     c
ROM:0492 38 0E                       jr      c, loc_4A2
ROM:0494 20 FB                       jr      nz, loc_491
ROM:0496 15                          dec     d
ROM:0497 CC D7 04                    call    z, sub_4D7
ROM:049A 78                          ld      a, b
ROM:049B
ROM:049B             loc_49B:                                ; DATA XREF: ROM:043D↑w
ROM:049B D6 00                       sub     0
ROM:049D 20 03                       jr      nz, loc_4A2
ROM:049F 1C                          inc     e
ROM:04A0 06 00                       ld      b, 0
ROM:04A2
ROM:04A2             loc_4A2:                                ; CODE XREF: ROM:048A↑j
ROM:04A2                                                     ; ROM:0492↑j ...
ROM:04A2 7E                          ld      a, (hl)
ROM:04A3 D9                          exx
ROM:04A4 C9                          ret
ROM:04A5             ; ---------------------------------------------------------------------------
ROM:04A5
ROM:04A5             loc_4A5:                                ; CODE XREF: ROM:0472↑j
ROM:04A5 CD 88 04                    call    loc_488
ROM:04A8 CD 88 04                    call    loc_488
ROM:04AB 6F                          ld      l, a
ROM:04AC CD 88 04                    call    loc_488
ROM:04AF 67                          ld      h, a
ROM:04B0 3E 30                       ld      a, 30h ; '0'    ; move the 4K floating region to $3000-$3FFF (TRS-80 compatible)
ROM:04B2 32 DC 07                    ld      (VLATCH), a     ; boot rom at $3000-$33FF
ROM:04B5 E9                          jp      (hl)            ; transfer control to next stage
ROM:04B5             ; ---------------------------------------------------------------------------
ROM:04B6 00                          db    0
ROM:04B7 00                          db    0
ROM:04B8 00                          db    0
ROM:04B9
ROM:04B9             ; =============== S U B R O U T I N E =======================================
ROM:04B9
ROM:04B9             ; call into boot rom disk read routine
ROM:04B9
ROM:04B9             CALL_READ:                              ; CODE XREF: ROM:040C↑p
ROM:04B9                                                     ; ROM:0413↑p ...
ROM:04B9 E5                          push    hl
ROM:04BA C5                          push    bc
ROM:04BB D5                          push    de
ROM:04BC 16 00                       ld      d, 0            ; TRACK DE
ROM:04BE 48                          ld      c, b            ; SECTORS BC  ( B to C inclusive)
ROM:04BF 3E 00                       ld      a, 0            ; HEAD A   (ZEROR here)
ROM:04C1 CD 03 00                    call    READ
ROM:04C4 D1                          pop     de
ROM:04C5 C1                          pop     bc
ROM:04C6 E1                          pop     hl
ROM:04C7 C9                          ret
ROM:04C7             ; End of function CALL_READ
ROM:04C7
ROM:04C8
ROM:04C8             ; =============== S U B R O U T I N E =======================================
ROM:04C8
ROM:04C8
ROM:04C8             sub_4C8:                                ; CODE XREF: ROM:043A↑p
ROM:04C8                                                     ; sub_4D7+10↓p
ROM:04C8 C5                          push    bc
ROM:04C9 57                          ld      d, a
ROM:04CA AF                          xor     a
ROM:04CB 06 08                       ld      b, 8
ROM:04CD
ROM:04CD             loc_4CD:                                ; CODE XREF: sub_4C8:loc_4D3↓j
ROM:04CD 87                          add     a, a
ROM:04CE CB 21                       sla     c
ROM:04D0 30 01                       jr      nc, loc_4D3
ROM:04D2 82                          add     a, d
ROM:04D3
ROM:04D3             loc_4D3:                                ; CODE XREF: sub_4C8+8↑j
ROM:04D3 10 F8                       djnz    loc_4CD
ROM:04D5 C1                          pop     bc
ROM:04D6 C9                          ret
ROM:04D6             ; End of function sub_4C8
ROM:04D6
ROM:04D7
ROM:04D7             ; =============== S U B R O U T I N E =======================================
ROM:04D7
ROM:04D7
ROM:04D7             sub_4D7:                                ; CODE XREF: ROM:044C↑p
ROM:04D7                                                     ; ROM:0497↑p
ROM:04D7 DD 23                       inc     ix
ROM:04D9 DD 5E 00                    ld      e, (ix+0)
ROM:04DC DD 23                       inc     ix
ROM:04DE DD 7E 00                    ld      a, (ix+0)
ROM:04E1 F5                          push    af
ROM:04E2 07                          rlca
ROM:04E3 07                          rlca
ROM:04E4 07                          rlca
ROM:04E5 E6 07                       and     7
ROM:04E7 CD C8 04                    call    sub_4C8
ROM:04EA 47                          ld      b, a
ROM:04EB CD 7F 04                    call    read_dip
ROM:04EE B7                          or      a
ROM:04EF 20 07                       jr      nz, loc_4F8
ROM:04F1 78                          ld      a, b
ROM:04F2 D6 20                       sub     20h ; ' '
ROM:04F4 38 02                       jr      c, loc_4F8
ROM:04F6 47                          ld      b, a
ROM:04F7 1C                          inc     e
ROM:04F8
ROM:04F8             loc_4F8:                                ; CODE XREF: sub_4D7+18↑j
ROM:04F8                                                     ; sub_4D7+1D↑j
ROM:04F8 F1                          pop     af
ROM:04F9 E6 1F                       and     1Fh
ROM:04FB 3C                          inc     a
ROM:04FC 57                          ld      d, a
ROM:04FD C9                          ret
ROM:04FD             ; End of function sub_4D7
ROM:04FD
ROM:04FD             ; ---------------------------------------------------------------------------
ROM:04FE 00                          db    0
ROM:04FF FC                          db 0FCh
......